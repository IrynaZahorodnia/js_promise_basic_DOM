{"mappings":"ACEA,IAAM,EAAiB,SAAC,CAAxB,EAA8B,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CACtB,EAAU,SAAS,aAAa,CAAC,OAEvC,EAAQ,SAAS,CAAC,GAAG,CAAC,WAElB,GACF,EAAQ,SAAS,CAAC,GAAG,CAAC,iBAExB,EAAQ,WAAW,CAAG,EACtB,SAAS,IAAI,CAAC,MAAM,CAAC,EACvB,EAEI,EAAkB,CAAA,EAEhB,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EAGE,AAFa,SAAS,aAAa,CAAC,SAE/B,gBAAgB,CAAC,QAAS,WACxB,IACH,EAAkB,CAAA,EAClB,EAAQ,yBAEZ,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACJ,IACH,EAAkB,CAAA,EAClB,EAAO,AAAI,MAAM,0BAErB,EAAG,IACL,GAEA,EAAS,IAAI,CAAC,GAAgB,KAAK,CAAC,SAAC,CAArC,EAA+C,OAAA,EAAe,EAAO,CAAA,E,GACrE,EAAS,IAAI,CAAC,GAAgB,KAAK,CAAC,SAAC,CAArC,EAA+C,OAAA,EAAe,EAAO,CAAA,E","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar promiseHandler = function(text) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var message = document.createElement(\"div\");\n    message.classList.add(\"message\");\n    if (isError) message.classList.add(\"error-message\");\n    message.textContent = text;\n    document.body.append(message);\n};\nvar promiseAppeared = false;\nvar promise1 = new Promise(function(resolve, reject) {\n    var logo = document.querySelector(\".logo\");\n    logo.addEventListener(\"click\", function() {\n        if (!promiseAppeared) {\n            promiseAppeared = true;\n            resolve(\"Promise was resolved!\");\n        }\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        if (!promiseAppeared) {\n            promiseAppeared = true;\n            reject(new Error(\"Promise was rejected!\"));\n        }\n    }, 3000);\n});\npromise1.then(promiseHandler).catch(function(error) {\n    return promiseHandler(error, true);\n});\npromise2.then(promiseHandler).catch(function(error) {\n    return promiseHandler(error, true);\n});\n\n//# sourceMappingURL=index.8e8c1f0a.js.map\n","'use strict';\n\nconst promiseHandler = (text, isError = false) => {\n  const message = document.createElement('div');\n\n  message.classList.add('message');\n\n  if (isError) {\n    message.classList.add('error-message');\n  }\n  message.textContent = text;\n  document.body.append(message);\n};\n\nlet promiseAppeared = false;\n\nconst promise1 = new Promise((resolve, reject) => {\n  const logo = document.querySelector('.logo');\n\n  logo.addEventListener('click', () => {\n    if (!promiseAppeared) {\n      promiseAppeared = true;\n      resolve('Promise was resolved!');\n    }\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (!promiseAppeared) {\n      promiseAppeared = true;\n      reject(new Error('Promise was rejected!'));\n    }\n  }, 3000);\n});\n\npromise1.then(promiseHandler).catch((error) => promiseHandler(error, true));\npromise2.then(promiseHandler).catch((error) => promiseHandler(error, true));\n"],"names":["promiseHandler","text","isError","arguments","length","message","document","createElement","classList","add","textContent","body","append","promiseAppeared","promise1","Promise","resolve","reject","logo","querySelector","addEventListener","promise2","setTimeout","Error","then","catch","error"],"version":3,"file":"index.8e8c1f0a.js.map"}